{
	"info": {
		"_postman_id": "b2e40dae-3cbe-4a76-a9c2-395fb3862653",
		"name": "Prueba práctica",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4253512",
		"_collection_link": "https://winter-sunset-845005.postman.co/workspace/Prueba-pr%25C3%25A1ctica~4cfe3563-9cc7-43e3-8a92-e46d7a0f421e/collection/4253512-b2e40dae-3cbe-4a76-a9c2-395fb3862653?action=share&source=collection_link&creator=4253512"
	},
	"item": [
		{
			"name": "Aerolínea",
			"item": [
				{
					"name": "Crear aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"aerolineaId\", pm.response.json().id);\r",
									"\r",
									"pm.test(\"El código de estado es 201\", function() {\r",
									"    pm.response.to.have.status(201)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().nombre).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().descripcion).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().fechaFundacion).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().urlPaginaWeb).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Latam Airlines\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad.\",\r\n    \"fechaFundacion\": \"2020-01-01\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"response": [
						{
							"name": "Crear aerolínea",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Latam Airlines\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad.\",\r\n    \"fechaFundacion\": \"2020-01-01\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es\",\r\n    \"id\": \"211411a8-e705-4795-8b23-bcf41279a4d3\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Crear aerolínea 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"aerolineaId2\", pm.response.json().id);\r",
									"\r",
									"pm.test(\"El código de estado es 201\", function() {\r",
									"    pm.response.to.have.status(201)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().nombre).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().descripcion).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().fechaFundacion).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().urlPaginaWeb).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Latam Airlines\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad.\",\r\n    \"fechaFundacion\": \"2020-01-01\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"response": [
						{
							"name": "Crear aerolínea 2",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Latam Airlines\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad.\",\r\n    \"fechaFundacion\": \"2020-01-01\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es\",\r\n    \"id\": \"a48a1a34-6bed-46e4-bc5b-33fbfa1454af\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Crear aerolínea con una fecha de fundación en el futuro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 400\", function() {\r",
									"    pm.response.to.have.status(400)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().message).to.be.contains('La fecha de fechaFundacion debe ser en el pasado.');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Latam Airlines\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad.\",\r\n    \"fechaFundacion\": \"2050-01-01\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"response": [
						{
							"name": "Crear aerolínea con una fecha de fundación en el futuro",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"message\": [\r\n        \"La fecha de fechaFundacion debe ser en el pasado.\"\r\n    ],\r\n    \"error\": \"Bad Request\",\r\n    \"statusCode\": 400\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Obtener todas las aerolíneas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"La lista no está vacía\", function() {\r",
									"    pm.expect(pm.response.json()).to.be.an('array').that.is.not.empty;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"response": [
						{
							"name": "Obtener todas las aerolíneas",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": \"a48a1a34-6bed-46e4-bc5b-33fbfa1454af\",\r\n        \"nombre\": \"Latam Airlines\",\r\n        \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad.\",\r\n        \"fechaFundacion\": \"2020-01-01T05:00:00.000Z\",\r\n        \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es\",\r\n        \"aeropuertos\": []\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Obtener una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"La lista no está vacía\", function() {\r",
									"    pm.expect(pm.response.json().nombre).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().descripcion).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().fechaFundacion).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().urlPaginaWeb).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{aerolineaId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{aerolineaId}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una aerolínea",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"97bcab5c-eb7a-41fe-ba13-b4faf42c5915\",\r\n    \"nombre\": \"Latam Airlines\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad.\",\r\n    \"fechaFundacion\": \"2020-01-01T05:00:00.000Z\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es\",\r\n    \"aeropuertos\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Obtener una aerolínea que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"La aerolínea con el id dado no fue encontrada\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{$guid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{$guid}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una aerolínea que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"La aerolínea con el id dado no fue encontrada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{$guid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{$guid}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Actualizar una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().nombre).to.contain('new');\r",
									"    pm.expect(pm.response.json().descripcion).to.contain('new');\r",
									"    pm.expect(pm.response.json().fechaFundacion).to.eq('2024-01-01');\r",
									"    pm.expect(pm.response.json().urlPaginaWeb).to.contain('new');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Latam Airlines new\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad. new\",\r\n    \"fechaFundacion\": \"2024-01-01\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es/new\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines/{{aerolineaId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{aerolineaId}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar una aerolínea",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"97bcab5c-eb7a-41fe-ba13-b4faf42c5915\",\r\n    \"nombre\": \"Latam Airlines new\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad. new\",\r\n    \"fechaFundacion\": \"2024-01-01\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es/new\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Actualizar una aerolínea que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"La aerolínea con el id dado no fue encontrada\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Latam Airlines new\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad. new\",\r\n    \"fechaFundacion\": \"2024-01-01\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es/new\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines/{{$guid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{$guid}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar una aerolínea que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"La aerolínea con el id dado no fue encontrada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{$guid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{$guid}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Actualizar una aerolínea con una fecha de fundación en el futuro",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 400\", function() {\r",
									"    pm.response.to.have.status(400)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().message).to.be.contains('La fecha de fechaFundacion debe ser en el pasado.');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Latam Airlines new\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad. new\",\r\n    \"fechaFundacion\": \"2050-01-01\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es/new\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines/{{$guid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{$guid}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar una aerolínea con una fecha de fundación en el futuro",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"message\": [\r\n        \"La fecha de fechaFundacion debe ser en el pasado.\"\r\n    ],\r\n    \"error\": \"Bad Request\",\r\n    \"statusCode\": 400\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{$guid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{$guid}}"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Eliminar aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 204\", function() {\r",
									"    pm.response.to.have.status(204)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{aerolineaId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{aerolineaId}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar aerolínea",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Eliminar aerolínea que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"La aerolínea con el id dado no fue encontrada\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{$guid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{$guid}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar aerolínea que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"La aerolínea con el id dado no fue encontrada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{$guid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{$guid}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "Aeropuerto",
			"item": [
				{
					"name": "Crear aeropuerto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"aeropuertoId\", pm.response.json().id);\r",
									"\r",
									"pm.test(\"El código de estado es 201\", function() {\r",
									"    pm.response.to.have.status(201)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().nombre).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().codigo).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().pais).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().ciudad).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"response": [
						{
							"name": "Crear aeropuerto",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"id\": \"773e1818-a2df-418d-8fed-e6c1c565cee3\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Crear aeropuerto 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"aeropuertoId2\", pm.response.json().id);\r",
									"\r",
									"pm.test(\"El código de estado es 201\", function() {\r",
									"    pm.response.to.have.status(201)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().nombre).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().codigo).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().pais).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().ciudad).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"response": [
						{
							"name": "Crear aeropuerto 2",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"id\": \"1619c9c1-b301-4231-94bf-ea9c172ddb14\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Crear aeropuerto 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"aeropuertoId3\", pm.response.json().id);\r",
									"\r",
									"pm.test(\"El código de estado es 201\", function() {\r",
									"    pm.response.to.have.status(201)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().nombre).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().codigo).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().pais).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().ciudad).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"response": [
						{
							"name": "Crear aeropuerto 3",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"id\": \"41c580d1-0afa-4ef6-9f62-5c7d2d44f1a4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Obtener todos los aeropuertos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"La lista no está vacía\", function() {\r",
									"    pm.expect(pm.response.json()).to.be.an('array').that.is.not.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"response": [
						{
							"name": "Obtener todos los aeropuertos",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": \"41c580d1-0afa-4ef6-9f62-5c7d2d44f1a4\",\r\n        \"nombre\": \"El Dorado\",\r\n        \"codigo\": \"BOG\",\r\n        \"pais\": \"Colombia\",\r\n        \"ciudad\": \"Bogotá\",\r\n        \"aerolineas\": []\r\n    },\r\n    {\r\n        \"id\": \"773e1818-a2df-418d-8fed-e6c1c565cee3\",\r\n        \"nombre\": \"El Dorado\",\r\n        \"codigo\": \"BOG\",\r\n        \"pais\": \"Colombia\",\r\n        \"ciudad\": \"Bogotá\",\r\n        \"aerolineas\": []\r\n    },\r\n    {\r\n        \"id\": \"1619c9c1-b301-4231-94bf-ea9c172ddb14\",\r\n        \"nombre\": \"El Dorado\",\r\n        \"codigo\": \"BOG\",\r\n        \"pais\": \"Colombia\",\r\n        \"ciudad\": \"Bogotá\",\r\n        \"aerolineas\": []\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Obtener un aeropuerto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().nombre).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().codigo).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().pais).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().ciudad).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airports/{{aeropuertoId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports",
								"{{aeropuertoId}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un aeropuerto",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"773e1818-a2df-418d-8fed-e6c1c565cee3\",\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"aerolineas\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports/{{aeropuertoId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports",
										"{{aeropuertoId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Obtener un aeropuerto que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"El aeropuerto con el id dado no fue encontrado\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airports/{{$guid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports",
								"{{$guid}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un aeropuerto que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"El aeropuerto con el id dado no fue encontrado\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports/{{$guid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports",
										"{{$guid}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Actualizar un aeropuerto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().nombre).to.contain('new');\r",
									"    pm.expect(pm.response.json().codigo).to.contain('new');\r",
									"    pm.expect(pm.response.json().pais).to.contain('new');\r",
									"    pm.expect(pm.response.json().ciudad).to.contain('new');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"El Dorado new\",\r\n    \"codigo\": \"BOG new\",\r\n    \"pais\": \"Colombia new\",\r\n    \"ciudad\": \"Bogotá new\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airports/{{aeropuertoId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports",
								"{{aeropuertoId}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar un aeropuerto",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"773e1818-a2df-418d-8fed-e6c1c565cee3\",\r\n    \"nombre\": \"El Dorado new\",\r\n    \"codigo\": \"BOG new\",\r\n    \"pais\": \"Colombia new\",\r\n    \"ciudad\": \"Bogotá new\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports/{{aeropuertoId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports",
										"{{aeropuertoId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Actualizar un aeropuerto que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"El aeropuerto con el id dado no fue encontrado\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"El Dorado new\",\r\n    \"codigo\": \"BOG new\",\r\n    \"pais\": \"Colombia new\",\r\n    \"ciudad\": \"Bogotá new\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airports/{{$guid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports",
								"{{$guid}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar un aeropuerto que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"El aeropuerto con el id dado no fue encontrado\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports/{{$guid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports",
										"{{$guid}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Eliminar un aeropuerto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 204\", function() {\r",
									"    pm.response.to.have.status(204)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airports/{{aeropuertoId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports",
								"{{aeropuertoId}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar un aeropuerto",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/airports/{{aeropuertoId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports",
										"{{aeropuertoId}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Eliminar un aeropuerto que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"El aeropuerto con el id dado no fue encontrado\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airports/{{$guid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports",
								"{{$guid}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar un aeropuerto que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"El aeropuerto con el id dado no fue encontrado\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports/{{$guid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports",
										"{{$guid}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "Aerolínea - Aeropuerto",
			"item": [
				{
					"name": "Agregar un aeropuerto a una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 201\", function() {\r",
									"    pm.response.to.have.status(201)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().nombre).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().descripcion).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().fechaFundacion).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().urlPaginaWeb).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"La lista no está vacía\", function() {\r",
									"    pm.expect(pm.response.json().aeropuertos).to.be.an('array').that.is.not.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{aeropuertoId2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{aerolineaId2}}",
								"airports",
								"{{aeropuertoId2}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un aeropuerto a una aerolínea",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"1edc98e8-ed10-47f0-8370-2af1fdaf8807\",\r\n    \"nombre\": \"Latam Airlines\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad.\",\r\n    \"fechaFundacion\": \"2020-01-01T05:00:00.000Z\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es\",\r\n    \"aeropuertos\": [\r\n        {\r\n            \"id\": \"1619c9c1-b301-4231-94bf-ea9c172ddb14\",\r\n            \"nombre\": \"El Dorado\",\r\n            \"codigo\": \"BOG\",\r\n            \"pais\": \"Colombia\",\r\n            \"ciudad\": \"Bogotá\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{aeropuertoId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId2}}",
										"airports",
										"{{aeropuertoId2}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Agregar un aeropuerto a una aerolínea que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"La aerolínea con el id dado no fue encontrada\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{$guid}}/airports/{{aeropuertoId2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{$guid}}",
								"airports",
								"{{aeropuertoId2}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un aeropuerto a una aerolínea que no existe",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"La aerolínea con el id dado no fue encontrada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{$guid}}/airports/{{aeropuertoId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{$guid}}",
										"airports",
										"{{aeropuertoId2}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Agregar un aeropuerto que no existe a una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"El aeropuerto con el id dado no fue encontrado\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{$guid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{aerolineaId2}}",
								"airports",
								"{{$guid}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un aeropuerto que no existe a una aerolínea",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"El aeropuerto con el id dado no fue encontrado\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{$guid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId2}}",
										"airports",
										"{{$guid}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Obtener todos los aeropuertos de una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"La lista no está vacía\", function() {\r",
									"    pm.expect(pm.response.json()).to.be.an('array').that.is.not.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{aerolineaId2}}",
								"airports"
							]
						}
					},
					"response": [
						{
							"name": "Obtener todos los aeropuertos de una aerolínea",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": \"1619c9c1-b301-4231-94bf-ea9c172ddb14\",\r\n        \"nombre\": \"El Dorado\",\r\n        \"codigo\": \"BOG\",\r\n        \"pais\": \"Colombia\",\r\n        \"ciudad\": \"Bogotá\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId2}}",
										"airports"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Obtener todos los aeropuertos de una aerolínea que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"La aerolínea con el id dado no fue encontrada\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{$guid}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{$guid}}",
								"airports"
							]
						}
					},
					"response": [
						{
							"name": "Obtener todos los aeropuertos de una aerolínea que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"La aerolínea con el id dado no fue encontrada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{$guid}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{$guid}}",
										"airports"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Obtener un aeropuerto de una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().nombre).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().codigo).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().pais).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().ciudad).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{aeropuertoId2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{aerolineaId2}}",
								"airports",
								"{{aeropuertoId2}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un aeropuerto de una aerolínea",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"1619c9c1-b301-4231-94bf-ea9c172ddb14\",\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{aeropuertoId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId2}}",
										"airports",
										"{{aeropuertoId2}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Obtener un aeropuerto de una aerolínea que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"La aerolínea con el id dado no fue encontrada\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{$guid}}/airports/{{aeropuertoId2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{$guid}}",
								"airports",
								"{{aeropuertoId2}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un aeropuerto de una aerolínea que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"La aerolínea con el id dado no fue encontrada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{$guid}}/airports/{{aeropuertoId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{$guid}}",
										"airports",
										"{{aeropuertoId2}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Obtener un aeropuerto que no existe de una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"El aeropuerto con el id dado no fue encontrado\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{$guid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{aerolineaId2}}",
								"airports",
								"{{$guid}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un aeropuerto que no existe de una aerolínea",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"El aeropuerto con el id dado no fue encontrado\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{$guid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId2}}",
										"airports",
										"{{$guid}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Obtener un aeropuerto que no está asociado a una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 412\", function() {\r",
									"    pm.response.to.have.status(412)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"El aeropuerto con el id dado no está asociado a la aerolínea\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{aeropuertoId3}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{aerolineaId2}}",
								"airports",
								"{{aeropuertoId3}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un aeropuerto que no está asociado a una aerolínea",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 412,\r\n    \"message\": \"El aeropuerto con el id dado no está asociado a la aerolínea\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{aeropuertoId3}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId2}}",
										"airports",
										"{{aeropuertoId3}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Actualizar los aeropuertos de una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().nombre).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().descripcion).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().fechaFundacion).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().urlPaginaWeb).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"La lista no está vacía\", function() {\r",
									"    pm.expect(pm.response.json().aeropuertos).to.be.an('array').that.is.not.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"{{aeropuertoId2}}\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{aerolineaId2}}",
								"airports"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar los aeropuertos de una aerolínea",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"1edc98e8-ed10-47f0-8370-2af1fdaf8807\",\r\n    \"nombre\": \"Latam Airlines\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad.\",\r\n    \"fechaFundacion\": \"2020-01-01T05:00:00.000Z\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es\",\r\n    \"aeropuertos\": [\r\n        {\r\n            \"id\": \"1619c9c1-b301-4231-94bf-ea9c172ddb14\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId2}}",
										"airports"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Actualizar los aeropuertos de una aerolínea que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"La aerolínea con el id dado no fue encontrada\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"{{aeropuertoId2}}\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines/{{$guid}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{$guid}}",
								"airports"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar los aeropuertos de una aerolínea que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"La aerolínea con el id dado no fue encontrada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{$guid}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{$guid}}",
										"airports"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Actualizar los aeropuertos de una aerolínea con aeropuertos que no existen",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"El aeropuerto con el id dado no fue encontrado\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"{{$guid}}\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{aerolineaId2}}",
								"airports"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar los aeropuertos de una aerolínea con aeropuertos que no existen",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"El aeropuerto con el id dado no fue encontrado\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId2}}",
										"airports"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Eliminar un aeropuerto de una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 204\", function() {\r",
									"    pm.response.to.have.status(204)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{aeropuertoId2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{aerolineaId2}}",
								"airports",
								"{{aeropuertoId2}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar un aeropuerto de una aerolínea",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{aeropuertoId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId2}}",
										"airports",
										"{{aeropuertoId2}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Eliminar un aeropuerto de una aerolínea que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"La aerolínea con el id dado no fue encontrada\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{$guid}}/airports/{{aeropuertoId2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{$guid}}",
								"airports",
								"{{aeropuertoId2}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar un aeropuerto de una aerolínea que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"La aerolínea con el id dado no fue encontrada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{$guid}}/airports/{{aeropuertoId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{$guid}}",
										"airports",
										"{{aeropuertoId2}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Eliminar un aeropuerto que no existe de una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"El aeropuerto con el id dado no fue encontrado\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{$guid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{aerolineaId2}}",
								"airports",
								"{{$guid}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar un aeropuerto que no existe de una aerolínea",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"El aeropuerto con el id dado no fue encontrado\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{$guid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId2}}",
										"airports",
										"{{$guid}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Eliminar un aeropuerto que no está asociado a una aerolínea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 412\", function() {\r",
									"    pm.response.to.have.status(412)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"El aeropuerto con el id dado no está asociado a la aerolínea\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{aeropuertoId3}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{aerolineaId2}}",
								"airports",
								"{{aeropuertoId3}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar un aeropuerto que no está asociado a una aerolínea",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 412,\r\n    \"message\": \"El aeropuerto con el id dado no está asociado a la aerolínea\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{aeropuertoId3}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId2}}",
										"airports",
										"{{aeropuertoId3}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				}
			]
		}
	]
}